@*@model IEnumerable<EmployeeMangmentSystem.Repository.Models.RolePermission>*@
@using  EmployeeMangmentSystem.Repository.Models
@*@model dynamic*@
@{ 
    IEnumerable<RolePermission> roles = ViewData["Roles"] as IEnumerable<RolePermission>;
    RolePermission role = ViewData["Role"] as RolePermission;
}

@{
    ViewBag.Title = "Role Permission";
}

<div class="x_panel">
    <div class="x_title">
        <h2>
            @if (!string.IsNullOrWhiteSpace(ViewBag.Title))
            {
                @ViewBag.Title
            }
        </h2>
        <ul class="nav navbar-right panel_toolbox">
            <li>
                <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
            </li>

        </ul>
        <div class="clearfix"></div>
    </div>
    <div class="x_content">
        <div class="row">
            <div class="col-md-8">
                <div class="form-row">
                    <div class="form-group">
                        @Html.Label("Select Role", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.DropDownListFor(model => role.Id, new SelectList(ViewBag.Roles, "Id", "Name"),"Select Role", new { @class = "form-control", onchange = "SelectedIndexChanged()" ,@id="RoleId"})
                        </div>
                    </div>
                </div>
            </div>
        </div>
        @if (Model != null)
        {


            <table id="roles" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0" style="margin-top:15px;">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => role.ModuleName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => role.Read)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => role.Create)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => role.Edit)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => role.Delete)
                        </th>
                        <th>
                            Edit
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (RolePermission item in roles)
                    {
                    <tr>
                        <td id="ModuleName">
                            @Html.DisplayFor(modelItem => item.ModuleName)
                        </td>
                        <td id="Read">
                            @Html.DisplayFor(modelItem => item.Read)
                        </td>
                        <td id="Create">
                            @Html.DisplayFor(modelItem => item.Create)
                        </td>
                        <td id="Edit">
                            @Html.DisplayFor(modelItem => item.Edit)
                        </td>
                        <td id="Delete">
                            @Html.DisplayFor(modelItem => item.Delete)
                        </td>
                        <td>
                            <a class="btn btn-info glyphicon glyphicon-edit" href="@Url.Action("Edit","RolePermission",new { id = @item.Id})"></a>
                        </td>
                    </tr>
                    }
                </tbody>
            </table>
        }
    </div>
</div>

<script>
    function SelectedIndexChanged() {
        location.href = '@Url.Action("DisplayRoles", "RolePermission")?id=' + $("#RoleId").val() ;
    }
</script>


 // https://www.c-sharpcorner.com/UploadFile/ff2f08/multiple-models-in-single-view-in-mvc/