@model EmployeeMangmentSystem.Repository.Models.SettingView

@{
    ViewBag.Title = "Create";
    var data = Model;
}
@using (Html.BeginForm("Create", "Setting", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="form-horizontal">

        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <div class="row">
            <div class="col-md-6">
                <div class="x_panel">
                    <div class="x_title">
                        <h2>
                            Print Setting:
                        </h2>
                        <ul class="nav navbar-right panel_toolbox">
                            <li>
                                <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                            </li>

                        </ul>
                        <div class="clearfix"></div>
                    </div>
                    <div class="x_content">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Header, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.Header, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Header, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.SubHeader, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.SubHeader, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.SubHeader, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Logo, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(model => model.Logo, new { @class = "form-control", accept = "image/x-png,image/gif,image/jpeg", type = "file", @onchange = "readURL(this);" })
                                @*<input type="file" name="Logo" class="form-control" />*@
                                @Html.ValidationMessageFor(model => model.Logo, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-4">

                                @if (data != null && data.Logo != "")
                                {
                                    <img src="~/Images/@Model.Logo" id="selctedImage" height="100" width="100" />
                                }
                            </div>
                        </div>
                       
                        <div class="form-group">
                            @Html.LabelFor(model => model.ShowDate, new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.CheckBoxFor(model => model.ShowDate, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ShowDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="x_panel">
                    <div class="x_title">
                        <h2>
                            Email Setting:
                        </h2>
                        <ul class="nav navbar-right panel_toolbox">
                            <li>
                                <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                            </li>

                        </ul>
                        <div class="clearfix"></div>
                    </div>
                    <div class="x_content">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Host, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.Host, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Host, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Port, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.Port, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Port, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-6 col-md-6">
                <div class="col-md-2">
                    <input type="submit" value="Update" class="btn btn-primary" />
                </div>
            </div>
        </div>
    </div>

}
<script>
    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#selctedImage')
                    .attr('src', e.target.result)
                    .width(100)
                    .height(100);
            };

            reader.readAsDataURL(input.files[0]);
        }
    }
</script>