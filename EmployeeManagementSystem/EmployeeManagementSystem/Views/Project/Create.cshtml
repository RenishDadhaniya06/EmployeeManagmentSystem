@model EmployeeMangmentSystem.Repository.Models.ViewModel.ProjectTeamViewModel

@{
    ViewBag.Title = "Create";
}

@*<link href="dist/font/font-fileuploader.css" rel="stylesheet">
    <link href="dist/jquery.fileuploader.min.css" rel="stylesheet">

    <script src="dist/jquery.fileuploader.min.js" type="text/javascript"></script>*@
<link href="~/Content/bootstrap-multiselect.css" rel="stylesheet" type="text/css" />
<script src="~/Scripts/bootstrap-multiselect.js" type="text/javascript"></script>
<script src="~/Scripts/ckeditor/ckeditor.js"></script>

<script type="text/javascript">
    var j = jQuery.noConflict();
    j(function () {
        j('.employee').multiselect();
    });
</script>

<div class="x_panel">
    <div class="x_title">
        <h2>
            @if (!string.IsNullOrWhiteSpace(ViewBag.Title))
            {
                @ViewBag.Title
            }
        </h2>
        <ul class="nav navbar-right panel_toolbox">
            <li>
                <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
            </li>

        </ul>
        <div class="clearfix"></div>
    </div>
    <div class="x_content">
        @using (Html.BeginForm("Create", "Project", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                <div class="row text-left">
                    <div class="col-lg-4 form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-lg-4 form-group">
                        @Html.LabelFor(model => model.ProjectStatus, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-lg-4 form-group">
                        @Html.LabelFor(model => model.ProjectType, htmlAttributes: new { @class = "control-label" })
                    </div>
                </div>
                <div class="row text-left">
                    <div class="col-lg-4 form-group">
                        @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                    </div>
                    <div class="col-lg-4 form-group">
                        @Html.EnumDropDownListFor(model => model.ProjectStatus, new { @class = "form-control" })
                    </div>
                    <div class="col-lg-4 form-group">
                        @Html.EnumDropDownListFor(model => model.ProjectType, new { @class = "form-control" })
                    </div>
                </div>
                <div class="row text-left">
                    <div class="col-lg-4 form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label"})
                    </div>
                </div>
                <div class="row text-left">
                    <div class="col-lg-12 form-group">
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @id = "Description" })
                        <script type="text/javascript">
                            CKEDITOR.replace('Description')
                        </script>
                    </div>
                </div>
                <div class="row text-left">
                    <div class="col-lg-4 form-group">
                        @Html.LabelFor(model => model.Documents, htmlAttributes: new { @class = "control-label" })
                    </div>
                    @if (Model.Id != Guid.Empty)
                    {
                        <div class="col-lg-4 form-group">
                            @Html.LabelFor(model => model.EmployeeId, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-lg-4 form-group">
                            @Html.LabelFor(model => model.CurrentlyWorking, htmlAttributes: new { @class = "control-label" })
                        </div>
                    }
                </div>
                <div class="row text-left">
                    <div class="col-lg-4 form-group">
                        @Html.TextBoxFor(model => model.Documents, new { @class = "form-control", type = "file", multiple = "multiple" })
                    </div>
                    @if (Model.Id != Guid.Empty)
                    {
                        <div class="col-lg-4 form-group">
                            @Html.DropDownList("Employees", new SelectList(ViewBag.Employees, "UserId", "FirstName"), new { @class = "form-control employee", @multiple = "multiple" })
                        </div>
                        @*<div class="col-lg-4 form-group">
                            @Html.CheckBoxFor(model => model.CurrentlyWorking, new { @class = "form-control" })
                        </div>*@
                    }
                    else
                    {

                    }
                </div>

                <div class="row">
                    @*<div class="col-md-offset-2 col-md-10">
                        <div class="col-md-2">
                            <input type="submit" value="Save" class="btn btn-primary" />
                        </div>
                        <div class="col-md-2">
                            <a href="@Url.Action("Index","Project")" class="btn btn-success">Cancel</a>
                        </div>
                    </div>*@

                    <div class="col-md-offset-5">
                        <input type="submit" value="Save" class="btn btn-primary" />
                        <a href="@Url.Action("Index","Project")" class="btn btn-success">Cancel</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

