@*@model IEnumerable<EmployeeMangmentSystem.Repository.Models.ViewModel.LeaveViewModel>*@
@model EmployeeMangmentSystem.Repository.Models.ViewModel.FilterViewModel
@using Helpers
@using EmployeeMangmentSystem.Resources
@{
    ViewBag.Title = "Leaves";
}


<script>
    $('.from').datepicker();
    $('.to').datepicker();
</script>

<div class="x_panel">
    <div class="x_title">
        <h2>
            @if (!string.IsNullOrWhiteSpace(ViewBag.Title))
            {
                @ViewBag.Title
            }
        </h2>
        <ul class="nav navbar-right panel_toolbox">
            <li>
                <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
            </li>

        </ul>
        <div class="clearfix"></div>
    </div>
    <div class="x_content">
        <div class="row">        </div>
        @using (Html.BeginForm("GetFilter", "Leave", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            <div class="row">
                <div class="form-group">
                    @Html.LabelFor(model => model.LeaveFilters.Name, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-2">
                        @Html.TextBoxFor(model => model.LeaveFilters.Name, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.LeaveFilters.Fromdate, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.LeaveFilters.Fromdate, new { htmlAttributes = new { @class = "form-control from", data_provide = "datepicker" } })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.LeaveFilters.Todate, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.LeaveFilters.Todate, new { htmlAttributes = new { @class = "form-control to", data_provide = "datepicker" } })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group">
                    @Html.LabelFor(model => model.LeaveFilters.leavetype, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-2">
                        @Html.EnumDropDownListFor(model => model.LeaveFilters.leavetype, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.LeaveFilters.leavestatus, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-2">
                        @Html.EnumDropDownListFor(model => model.LeaveFilters.leavestatus, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-4">
                        <input type="submit" value="Search" class="btn btn-info" />
                    </div>
                </div>
            </div>
            <div class="row"></div>
        }
        <table id="demoGrid" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
            <thead>
                <tr>
                    <th style="text-align:center">
                        User
                    </th>
                    <th style="text-align:center">
                        From
                    </th>
                    <th style="text-align:center">
                        To
                    </th>
                    <th style="text-align:center">
                        Message
                    </th>
                    <th style="text-align:center">
                        Email
                    </th>
                    <th style="text-align:center">
                        Leave Type
                    </th>
                    <th style="text-align:center">Approve</th>
                    <th style="text-align:center">Rejected</th>
                    <th style="text-align:center">Delete</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Leaves)
                {
                    <tr>
                        @*<td>  @item.From.ToShortDateString() To  @item.To.ToShortDateString()</td>*@
                        <td>@Html.DisplayFor(modelItem => item.Name)</td>
                        <td>@item.From.ToShortDateString()</td>
                        <td>@item.To.ToShortDateString()</td>
                        <td>@Html.DisplayFor(modelItem => item.Message)</td>
                        <td>@Html.DisplayFor(modelItem => item.Email)</td>
                        <td>
                            @if (item.LeaveType == Enums.LeaveType.Paid)
                            {
                                @CommonResources.Paid
                            }
                            else if (item.LeaveType == Enums.LeaveType.SeekLeave)
                            {
                                @CommonResources.SeekLeave
                            }
                            else
                            {
                                @CommonResources.EmergancyLeave
                            }
                        </td>
                        <td style="text-align:center">
                            <a class="btn btn-success fa fa-check" href="@Url.Action("ApproveLeave","Leave",new { id = @item.Id,Email = @item.Email})">Approve</a>
                        </td>
                        <td style="text-align:center">
                            <a class="btn btn-danger fa fa-times" href="@Url.Action("RejectedLeave","Leave",new { id = @item.Id,Email = @item.Email})">Rejected</a>
                        </td>
                        <td style="text-align:center">
                            <a class="btn btn-danger fa fa-remove delete-prompt" id="@item.Id" data-toggle="modal" data-target="#exampleModalCenter"></a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<script>
    var deleteUrl = '@Url.Action("DeleteConfirm", "Leave")';
</script>


@*<td>
        @if (item.LeaveStatus == Enums.LeaveStatus.Approved)
        {
            @CommonResources.Approved
        }
        else if (item.LeaveStatus == Enums.LeaveStatus.Pending)
        {
            @CommonResources.Pending
        }
        else
        {
            @CommonResources.Rejected
        }
    </td>*@