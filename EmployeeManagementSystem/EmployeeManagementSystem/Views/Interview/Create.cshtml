@model EmployeeMangmentSystem.Repository.Models.Interviews

@{
    ViewBag.Title = "Create Interview";
}





<script type="text/javascript">
    $('.sdate').datepicker()
    $('.stime').timepicker()

</script>

@*<script src="~/Scripts/Autocomplete.js" type="text/javascript"></script>*@
@*<script type="text/javascript">
        $(function () {
            debugger
             $('#CandidateId').autocomplete({
                source: function (request, response) {
                    debugger
                     $.ajax({
                         url: '@Url.Action("GetCandidateDetail","Interview")',
                         data: "{ 'name': '" + request.term + "'}",
                            dataType: "json",
                            type: "POST",
                            contentType: "application/json; charset=utf-8",
                         success: function (data) {
                             debugger
                             response($.map(data, function (item) {
                                 debugger
                                 return item.Name;
                                }))
                            },
                            error: function (response) {
                                alert(response.responseText);
                            },
                            failure: function (response) {
                                alert(response.responseText);
                            }
                        });
                    },
                 select: function (e, i) {
                     $('#CandidateId').val(i.item.val);
                    },
                    minLength: 3
            });
        });
    </script>*@

<script type="text/javascript">
    $(function () {
        $('.name').autocomplete({
            source: function(request, response) {
                     $.ajax({
                         url: '@Url.Action("GetCandidateDetail","Interview")',
                         data: "{ 'name': '" + request.term + "'}",
                            dataType: "json",
                            type: "POST",
                            contentType: "application/json; charset=utf-8",
                         success: function (data) {
                             response($.map(data, function (item) {
                                 return item;
                                }))
                            },
                            error: function (response) {
                                alert(response.responseText);
                            },
                            failure: function (response) {
                                alert(response.responseText);
                            }
                        });
                    },
                 select: function (event, ui) {
                     $('.name').val(ui.item.Name);
                     $('#CandidateId').val(ui.item.Id);
                     return false;
                    },
                 minLength: 3
             }).autocomplete("instance")._renderItem = function (ul, item) {
                    return $( "<li>" )
                        .append("<div>" + "<i class='fa fa-user'> " + "<b>" + "Name :  " + "</b>" + item.Name + "</i>" + "<br>" + "<i class = 'fa fa-phone'> " + "<b>" + "Mobile No : " + "</b>" + item.MobileNo + "</i>" + "<br>" + "<i class = 'fa fa-envelope' > " + "<b>" + "Email : " + "</b>" + item.Email + "</i>" + "</div>" )
                    .appendTo( ul );
            };
        });
</script>
<script type="text/javascript">
    function SelectedIndexChanged() {
        if ($(".emp").val() != "") {
            //debugger
            //location.href = '@Url.Action("EmployeeDetails", "Interview")?id=' + $("#EmployeeId").val();
            var temp = {
                id: $(".emp").val(),
            };
            $.ajax({
                url: '@Url.Action("EmployeeDetails","Interview")',
                data: JSON.stringify(temp),
                dataType: "json",
                type: "POST",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    //debugger
                    $('.ename').val(data.Name);
                    $('.email').val(data.Email);
                    //document.getElementById('ename').innerText = data.Name;
                    //document.getElementById('ename').innerHTML = data.Name.val;
                    //$("#ename").val(data.Name);
                    //$("#ename").text(data.Name);
                },
            });
        } 
    }
</script>



<div class="x_panel">
    <div class="x_title">
        <h2>
            @if (!string.IsNullOrWhiteSpace(ViewBag.Title))
            {
                @ViewBag.Title
            }
        </h2>
        <ul class="nav navbar-right panel_toolbox">
            <li>
                <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
            </li>

        </ul>
        <div class="clearfix"></div>
    </div>
    <div class="x_content">
        @using (Html.BeginForm("Create", "Interview", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                <div class="form-group">
                    @Html.Label("Select Candidate", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @*@Html.DropDownListFor(model => model.CandidateId, (SelectList)ViewBag.Candidate, "Select Candidate", new { @class = "form-control name" })*@
                        @Html.HiddenFor(model => model.CandidateId)
                        @Html.TextBox("Name",(string)ViewBag.Candidate , new { @class = "form-control name" })
                        @Html.ValidationMessageFor(model => model.CandidateId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Select Employee", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.EmployeeId, new SelectList(ViewBag.Employee, "Id", "Name"), "Select Employee", new { @class = "form-control emp", onchange = "SelectedIndexChanged()", @id = "EmployeeId" })
                        @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
                    </div>
                    @Html.Label("Name", htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-2">
                        @*@Html.TextBox("ename","",new { @class = "form-control ename"})*@
                        @Html.TextBox("Name",(string)ViewBag.emp.Name, new { @class = "form-control ename",@id = "ename",@readonly = "readonly"})
                    </div>
                    @Html.Label("Email", htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-2">
                        @*@Html.TextBox("email","",new { @class = "form-control email"})*@
                        @Html.TextBox("Email",(string)ViewBag.emp.Email, new { @class = "form-control email",@id = "email",@readonly = "readonly"})
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ScheduleTime, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.Label("Date")
                        @Html.TextBox("Sdate", (string)ViewBag.sdate, new { @class = "form-control sdate", data_provide = "datepicker" })
                    </div>
                    <div class="col-md-2">
                        @Html.Label("Time")
                        @Html.TextBox("Stime", (string)ViewBag.stime, new { @class = "form-control stime", data_provide = "timepicker" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.InterviewStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EnumDropDownListFor(model => model.InterviewStatus, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <div class="col-md-2">
                            <input type="submit" value="Save" class="btn btn-primary" />
                        </div>
                        <div class="col-md-2">
                            <a href="@Url.Action("Index","Interview")" class="btn btn-success">Cancel</a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
