@*@model EmployeeMangmentSystem.Repository.Models.ViewModel.DashboardCounts*@
@model EmployeeMangmentSystem.Repository.Models.ViewModel.DashboardViewModel

@{
    ViewBag.Title = "Index";
}

<link rel="stylesheet" type="text/css" href="~/Content/Chart.css" />
<link rel="stylesheet" type="text/css" href="~/Content/Chart.min.css" />
<script src="~/Scripts/Chart.js" type="text/javascript"></script>
<script src="~/Scripts/Chart.min.js" type="text/javascript"></script>
@*<script src="~/Scripts/jquery-3.3.1.min.js"></script>*@
@*<script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.bundle.js" type="text/javascript"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.bundle.min.js" type="text/javascript"></script>*@


<script type="text/javascript">
function generatePieChart() {
          $.ajax({
            url: '@Url.Action("RoleWiseUserData","Dashboard")',
            type: 'get',
            success: function (data) {
                  bindPieData(data)
            }, error: function (err) {
                toastify("error", err.statusText);
            }
        });
    }
     generatePieChart()
    function bindPieData(data) {
        if (data) {
            //toastify("error", 'Record deleted successfully');
            var ctx1 = document.getElementById("pieChart").getContext("2d");
            var datalabel = $.map(data, function (value, key) {
                return value.Name;
            });
            var total = $.map(data, function (value, key) {
                return value.Total;
            });
            var myChart = new Chart(ctx1, {
                type: 'pie',
                height: "230px",
                width: "300px",
                responsive: false,
                animation: false,
                legend: { horizontalAlign: 'bottom', },
                data: {
                    //labels: ["M", "T", "W", "T", "F", "S", "S"],
                    labels: datalabel,
                    datasets: [{
                        label: 'Monthly Expenses',
                        data: total,
                        backgroundColor: ["red", "blue", "green", "yellow", "pink", "brown"]
                    }]
                }
            });
        }
     }
    function generateSkillChart() {
          $.ajax({
            url: '@Url.Action("SkillWiseUserData","Dashboard")',
            type: 'get',
              success: function (data) {
                  console.log("Skill : " + data);
                  bindSkillData(data)
            }, error: function (err) {
                toastify("error", err.statusText);
                }
        });
    }
     generateSkillChart()
    function bindSkillData(data) {
        if (data) {
            //toastify("error", 'Record deleted successfully');
            var ctx1 = document.getElementById("lineChart").getContext("2d");
            var datalabel = $.map(data, function (value, key) {
                return value.Name;
            });
            console.log(datalabel);
            var total = $.map(data, function (value, key) {
                return value.Total;
            });
            console.log(total);
            var skillchart = new Chart(ctx1, {
                type: 'line',
                height: "230px",
                width: "300px",
                responsive: false,
                animation: false,
                legend: { horizontalAlign: 'bottom', },
                data: {
                    //labels: ["M", "T", "W", "T", "F", "S", "S"],
                    labels: datalabel,
                    datasets: [{
                        label: 'Skill',
                        data: total,
                        backgroundColor: "rgb(66, 134, 244)"
                    }]
                }, options: {
                    scaleShowValues: true,
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true
                            }
                        }],
                        xAxes: [{
                            ticks: {
                                autoSkip: false
                            }
                        }]
                    }
                }
            });
        }
    }

</script>


<div class="tile_count">
    <div class="col-md-2 col-sm-4  tile_stats_count">
        <span class="count_top" style="font-size:15px;"><i class="fa fa-user"></i> Total Employees</span>
        <div class="count">@Model.TotalEmployee</div>
    </div>

    <div class="col-md-2 col-sm-4  tile_stats_count">
        <span class="count_top" style="font-size:15px;"><i class="fa fa-user"></i> Total Developers</span>
        <div class="count">@Model.TotalDeveloper</div>
    </div>

    <div class="col-md-2 col-sm-4  tile_stats_count">
        <span class="count_top" style="font-size:15px;"><i class="fa fa-user"></i> Total Human Resources</span>
        <div class="count">@Model.TotalHR</div>
    </div>

    <div class="col-md-2 col-sm-4  tile_stats_count">
        <span class="count_top" style="font-size:15px;"><i class="fa fa-user"></i> Total Project Manager</span>
        <div class="count">@Model.TotalPM</div>
    </div>

    <div class="col-md-2 col-sm-4  tile_stats_count">
        <span class="count_top" style="font-size:15px;"><i class="fa fa-user"></i> Total Sales Manager</span>
        <div class="count">@Model.TotalSales</div>
    </div>

    <div class="col-md-2 col-sm-4  tile_stats_count">
        <span class="count_top" style="font-size:15px;"><i class="fa fa-file-text-o"></i> Total Projects</span>
        <div class="count">@Model.TotalProjects</div>
    </div>
</div>


<div class="btn-group dropup" style="position:fixed;bottom:20px !important; right:0px !important;">
    <button type="button" class="btn btn-primary dropdown-toggle" style="margin-left:82px;" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        <i class="fa fa-arrow-up"> Birth Days</i>
    </button>
    <div class="dropdown-menu" style="color:black; background-color:Highlight;">
        @foreach (var item in Model.MonthBirthdays)
        {

            <h5>
                @*@{
                        var name = item.Name + " " + item.BirthDate.ToShortDateString();
                    }
                    @name*@
                <span>@item.Name</span>
                <span>@item.BirthDate.ToShortDateString()</span>
            </h5>
            <div class="dropdown-divider"></div>

        }
    </div>
</div>



@*<div class="col-md-4">
    <div class="col-md-4 col-md-offset-1">
        <button type="button" class="btn btn-secondary" onclick="showPie()">
            Value
        </button>
    </div>
    <canvas id="myChart" width="400" height="200"></canvas>
</div>*@
<div class="row">
    <div class="col-md-6">
        <div class="x_panel ">
            <div class="x_title">Role Wise Employee</div>
            <div class="x_content">
                <div class="">
                    <canvas id="pieChart" width="400" height="250"></canvas>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="x_panel ">
            <div class="x_title">Skill Wise Employee</div>
            <div class="x_content">
                <div class="">
                    <canvas id="lineChart" width="400" height="250"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>
